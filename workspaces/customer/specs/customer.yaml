openapi: "3.0.0"
info:
  version: 1.0.0
  license:
    name: Kong
servers:
  - url: http://customer-api.default.svc.cluster.local:7050
x-kong-name: customer_api

x-kong-plugin-key-auth:
  name: key-auth
  enabled: true
  config:
    key_names: [api_key, apikey]
    key_in_body: false
    hide_credentials: true
paths:
  /customers:
    x-kong-name: get-customers
    get:
      summary: List all customers
      operationId: listCustomers
      tags:
        - customers
      x-kong-strip-path: true
      x-kong-plugin-mocking:
        enable: true
        config:
          api_specification_filename: customers.yaml
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of customers
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  kong:
    plugins:
      key_auth_config:
        name: key-auth
        enabled: true
        config:
        key_names: [api_key, apikey]
        key_in_body: false
        hide_credentials: true
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerName:
          type: string
      example:
        id:123
        customerName:'John Smith'
    Customers:
      type: array
      items:
        $ref: "#/components/schemas/Customer"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
